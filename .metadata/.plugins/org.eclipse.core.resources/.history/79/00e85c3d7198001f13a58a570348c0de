#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>

#include "main.h"
#include "cmsis_os.h"
#include "board.h"
#include "logger.h"
#include "dwt.h"

#include "app.h"

#define TASK_PERIOD_MS_           (5)
#define BUTTON_PERIOD_MS_         (TASK_PERIOD_MS_)

#define LONG_BUTTON_TIMEOUT (2000)
#define
void task_button(void* argument)
{
    uint32_t button_counter = 0;

    while (true)
    {
        GPIO_PinState button_state = HAL_GPIO_ReadPin(BUTTON_PORT, BUTTON_PIN);
        if (button_state == GPIO_PIN_SET)
        {
            button_counter += BUTTON_PERIOD_MS_;
        }
        else
        {
            int event = 0;
            if (button_counter >= LONG_BUTTON_TIMEOUT)
                event = BUTTON_TYPE_LONG;
            else if (button_counter >= 1000 && button_counter <= 2000)
                event = BUTTON_TYPE_SHORT;
            else if (button_counter >= 200 && button_counter <= 1000)
                event = BUTTON_TYPE_PULSE;

            if (event)
                xQueueSend(ui_queue, &event, ( TickType_t ) 0);

            button_counter = 0;
        }
        vTaskDelay(pdMS_TO_TICKS(BUTTON_PERIOD_MS_));
    }
}

/********************** end of file ******************************************/
